/*
MIT License

Copyright (c) 2023 MetaReal

Permission is hereby granted, free of charge, to any person obtaining a copy
of this software and associated documentation files (the "Software"), to deal
in the Software without restriction, including without limitation the rights
to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
copies of the Software, and to permit persons to whom the Software is
furnished to do so, subject to the following conditions:

The above copyright notice and this permission notice shall be included in all
copies or substantial portions of the Software.
*/

/**
 * @file lexer.h
 * This file contains definitions of the lexer that
 * converts contents of the code into a list of tokens. \n
 * All things defined in \a lexer.c and this file have the \a mr_lexer prefix.
*/

#ifndef __MR_LEXER__
#define __MR_LEXER__

#include <error/error.h>

/**
 * @struct __MR_LEXER_T
 * Result of the \a mr_lexer function.
 * @var mr_token_t* __MR_LEXER_T::tokens
 * List of tokens generated by the lexer.
 * @var mr_illegal_chr_t __MR_LEXER_T::error
 * Illegal character error.
*/
struct __MR_LEXER_T
{
    mr_token_t *tokens;
    mr_illegal_chr_t error;
};
typedef struct __MR_LEXER_T mr_lexer_t;

/**
 * It creates a list of tokens based on contents of the code. \n
 * If there is an illegal character in the source code or a character is missing,
 * the function returns an error.
 * @param res
 * Result of the lexer process (it contains both error details and tokens list).
 * @return
 * It returns a code which indicates if the process was successful or not. \n
 * If the process was successful, it returns <em>MR_NOERROR</em>.
 * Otherwise, it returns the error code (defined in \a defs.h header file).
*/
mr_byte_t mr_lexer(
    mr_lexer_t *res);

#endif
